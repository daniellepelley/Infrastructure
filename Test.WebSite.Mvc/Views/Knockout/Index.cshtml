@model Test.WebSite.Mvc.TestUser

@using HtmlHelpers;

@{
    ViewBag.Title = "Index";
}

<script src="~/scripts/jquery-1.8.2.min.js" type="text/javascript"></script>
<script src="~/scripts/knockout-2.2.0.debug.js" type="text/javascript"></script>


<h2>Index</h2>
@*<div data-bind="with: data">*@

@using (Html.KO().DataContext())
{
    @Html.KO().TextBox(model => model.FirstName)
    <div id="Val-FirstName"></div>

    @(Html.KO().TextBox(model => model.LastName))
    @Html.ValidationMessageFor(model => model.FirstName)
    <div id="Val-LastName"></div>
    
    <label>Telephone</label>
    @Html.KO().TextBox(model => model.Telephone)

    @Html.KO().TextBox(model => model.Telephone)

    @*using (var dataContext = Html.KO().DataContext(m => m.Address))
    {
        @dataContext.TextBox(model => model.Number)
        @dataContext.TextBox(model => model.Street)
        @dataContext.TextBox(model => model.Postcode)
        @dataContext.TextBox(model => model.County)
    }

    using (var dataContext = Html.KO().DataContext(m => m.Address))
    {
                @dataContext.TextBox(model => model.Postcode)
        @dataContext.TextBox(model => model.County)
        
        @dataContext.TextBox(model => model.Street)
    @dataContext.TextBox(model => model.Number)

    }*@
}



<input type="button" id="Save" value="Save" data-bind="click: Save" />


<script type="text/javascript">

    var viewModel =
        {
            data: {
                @(Html.KO().ViewModel())
            },
            Save: function () {
                $.ajax({
                    url: "/Knockout/Save",
                    data: ko.toJSON(viewModel.data),
                    type: 'post',
                    contentType: 'application/json; charset=utf-8'
                })
            .done(function (result) {
                viewModel.Load(result)
            })
            .fail(function (err) {

                var errorData = $.parseJSON(err.responseText);

                $("#Val-FirstName").html("");
                $("#Val-LastName").html("");

                for (var p in errorData) {
                    if (p === '') {
                    }
                    else {
                        $("#Val-" + p).html(errorData[p]);
                    }
                }
            });
            },
            Load: function(newData)
            {
                //$.mapData(viewModel.data, newData);

                var assignData = function(existingData, newData)
                {
                    for (var field in newData) {
                        if (existingData.hasOwnProperty(field) && typeof (existingData[field]) == "function") {
                            existingData[field](newData[field]);
                        }
                        else {
                            assignData(existingData[field], newData[field]);
                        }
                    }
                }

                assignData(this.data, newData);
            }
        }
    //alert(JSON.stringify(viewModel));

    viewModel.Load(@Html.Raw(Json.Encode(Model)));
    alert(JSON.stringify(viewModel));
    ko.applyBindings(viewModel);
    //alert(JSON.stringify(viewModel));
</script>

